#pragma once
//#include <RT.hpp>

struct CameraImageResolution {
	int width;
	int height;
};

#ifdef RA

#define KINECT_CONTROLLER
#define USE_DEPTH_HEURISTIC

#ifdef KINECT_CONTROLLER

//#define USE_MS_KINECT_SDK
//#define USE_OPENNI
#define USE_MS_KINECT_V2_SDK
//#include "stdafx.h"
//#include <Kinect.h>

#ifdef USE_MS_KINECT_SDK
#include <MSR_NuiApi.h>

#elif defined USE_MS_KINECT_V2_SDK

//#include "stdafx.h"
#include <tchar.h>
#include <strsafe.h>
#include <math.h>
#include <limits>

#include "opencv/cv.hpp"
//#include "opencv/core.h"
#include "opencv/highgui.h"

#include <Kinect.h>

// Safe release for interfaces
/*template<class Interface>
inline void SafeRelease(Interface *& pInterfaceToRelease)
{
if (pInterfaceToRelease != NULL)
{
pInterfaceToRelease->Release();
pInterfaceToRelease = NULL;
}
}*/
#include <Wincodec.h>

#else
#include <XnOpenNI.h>
#include <XnLog.h>
#include <XnCppWrapper.h>

#define CHECK_RC(rc, what)											\
		if (rc != XN_STATUS_OK)											\
		{																\
			printf("%s failed: %s\n", what, xnGetStatusString(rc));		\
		}

#endif



#ifdef USE_MS_KINECT_SDK
//#define fx_rgb 5.3009194943536181e+02
//#define fy_rgb 5.2635860167133876e+02
//#define cx_rgb 3.2821930715948992e+02
//#define cy_rgb 2.6872781351282777e+02
//#define k1_rgb 2.6451622333009589e-01
//#define k2_rgb -8.3990749424620825e-01
//#define p1_rgb -1.9922302173693159e-03
//#define p2_rgb 1.4371995932897616e-03
//#define k3_rgb 9.1192465078713847e-01
//
//#define fx_d 5.9425464969100040e+02
//#define fy_d 5.9248479436384002e+02
//#define cx_d 3.3978729959351779e+02
//#define cy_d 2.4250301427866111e+02
//#define k1_d -2.6386489753128833e-01
//#define k2_d 9.9966832163729757e-01
//#define p1_d -7.6275862143610667e-04
//#define p2_d 5.0350940090814270e-03
//#define k3_d -1.3053628089976321e+00

//#define fx_rgb 5.3009194943536181e+02
//#define fy_rgb 5.2635860167133876e+02
//#define cx_rgb 3.2821930715948992e+02
//#define cy_rgb 2.6872781351282777e+02
//#define k1_rgb 2.6172416643533958e-01
//#define k2_rgb -8.2104703257074252e-01
//#define p1_rgb -1.0637850248230928e-03
//#define p2_rgb 8.4946289275097779e-04
//#define k3_rgb 8.9012728224037985e-01
//
//#define fx_d 5.9425464969100040e+02
//#define fy_d 5.9248479436384002e+02
//#define cx_d 3.3978729959351779e+02
//#define cy_d 2.4250301427866111e+02
//#define k1_d -2.6167161458989197e-01
//#define k2_d 9.9319844495479259e-01
//#define p1_d -1.0221823575713733e-03
//#define p2_d 5.3621541487535148e-03
//#define k3_d -1.2966457585622253e+00

#define fx_rgb 5.2921508098293293e+02
#define fy_rgb 5.2556393630057437e+02
#define cx_rgb 3.2894272028759258e+02
#define cy_rgb 2.6748068171871557e+02
#define k1_rgb 2.6451622333009589e-01
#define k2_rgb -8.3990749424620825e-01
#define p1_rgb -1.9922302173693159e-03
#define p2_rgb 1.4371995932897616e-03
#define k3_rgb 9.1192465078713847e-01

#define fx_d 5.9421434211923247e+02
#define fy_d 5.9104053696870778e+02
#define cx_d 3.3930780975300314e+02
#define cy_d 2.4273913761751615e+02
#define k1_d -2.6386489753128833e-01
#define k2_d 9.9966832163729757e-01
#define p1_d -7.6275862143610667e-04
#define p2_d 5.0350940090814270e-03
#define k3_d -1.3053628089976321e+00


#define XN_DEVICE_SENSOR_MIN_DEPTH 0
#define XN_DEVICE_SENSOR_MAX_DEPTH 10000
#define XN_DEVICE_SENSOR_NO_DEPTH_VALUE 0
#define XN_DEVICE_SENSOR_MAX_SHIFT_VALUE 2048/*336*/


#define RGB_REG_X_RES 640
#define RGB_REG_Y_RES 512
#define XN_DEPTH_XRES 640
#define XN_DEPTH_YRES 480
#define XN_CMOS_VGAOUTPUT_XRES 1280
#define XN_SENSOR_WIN_OFFET_X 1
#define XN_SENSOR_WIN_OFFET_Y 1
#define RGB_REG_X_VAL_SCALE 16
#define S2D_PEL_CONST 10
#define XN_SENSOR_DEPTH_RGB_CMOS_DISTANCE 2.4
#define S2D_CONST_OFFSET 0.375
#elif defined USE_MS_KINECT_V2_SDK

/* TODO : KINECT V2 */


#define fx_rgb 1.0611486985611991e+03
#define fy_rgb 1.0611486985611991e+03
#define cx_rgb 7.1950000000000000e+02
#define cy_rgb 5.3950000000000000e+02
#define k1_rgb 1.6783186537451547e-02
//#define k2_rgb 9.6417662214518668e-02
#define k2_rgb 1000
#define p1_rgb 0
#define p2_rgb 0
#define k3_rgb -1.8840390123060022e-01



#else


#define XN_DEVICE_SENSOR_MIN_DEPTH 0
#define XN_DEVICE_SENSOR_MAX_DEPTH 10000
#define XN_DEVICE_SENSOR_NO_DEPTH_VALUE 0
#define XN_DEVICE_SENSOR_MAX_SHIFT_VALUE 2048/*336*/


#define RGB_REG_X_RES 640
#define RGB_REG_Y_RES 512
#define XN_DEPTH_XRES 640
#define XN_DEPTH_YRES 480
#define XN_CMOS_VGAOUTPUT_XRES 1280
#define XN_SENSOR_WIN_OFFET_X 1
#define XN_SENSOR_WIN_OFFET_Y 1
#define RGB_REG_X_VAL_SCALE 16
#define S2D_PEL_CONST 10
#define XN_SENSOR_DEPTH_RGB_CMOS_DISTANCE 2.4
#define S2D_CONST_OFFSET 0.375
#endif

//#include <RT.hpp>

class KinectCamera { //: public RT::BackgroundCamera {
private:
#ifdef USE_MS_KINECT_SDK
	CameraImageResolution videoFrameResolution;

	HANDLE videoStreamHandle;
	const NUI_IMAGE_FRAME* videoFrame;
	KINECT_LOCKED_RECT videoFrameLockedRect;

	HANDLE depthStreamHandle;
	const NUI_IMAGE_FRAME* depthFrame;
	KINECT_LOCKED_RECT depthFrameLockedRect;
	unsigned short* realDepthFrame;

	//RT::CustomVector<short> depthToShiftTable;
	//RT::CustomVector<unsigned short> regTable;

#elif defined USE_MS_KINECT_V2_SDK

	//RT::CustomVector<short> depthToShiftTable;
	//RT::CustomVector<unsigned short> regTable;

	/* TODO : KINECT V2 */
	HWND                    m_hWnd;
	INT64                   m_nStartTime;
	INT64                   m_nLastCounter;
	double                  m_fFreq;
	INT64                   m_nNextStatusTime;
	DWORD                   m_nFramesSinceUpdate;
	bool                    m_bSaveScreenshot;

	// Current Kinect
	IKinectSensor*          m_pKinectSensor;
	ICoordinateMapper*      m_pCoordinateMapper;
	DepthSpacePoint*        m_pDepthCoordinates;

	// Frame reader
	IMultiSourceFrameReader*m_pMultiSourceFrameReader;

	// Direct2D
	//ImageRenderer*          m_pDrawCoordinateMapping;
	//ID2D1Factory*           m_pD2DFactory;
	ColorImageFormat		m_imageFormat;
	RGBQUAD*                m_pOutputRGBX;
	RGBQUAD*                m_pBackgroundRGBX;
	RGBQUAD*                m_pColorRGBX;

	CameraSpacePoint*		m_pCameraCoordinates;
	CameraSpacePoint*		cropped_space;

	//boost::mutex m_lock;
	cv::Mat m_depth;
	cv::Mat m_color;



public:
	bool enableDepthHeuristic = false;
	int heuristic = 0;
	uchar* datac;
	UINT16* data;

private:


	void inline doDepthCriterion(unsigned short* bestDepth, int *bestDist, unsigned short val, int lcl, int ori) {
		int dist = abs(ori - lcl);
		if (*bestDist == dist) {
			if (*bestDepth < val) {
				*bestDepth = val;
				*bestDist = dist;
			}
		}
		else if (*bestDist > dist && val >= 500) {
			*bestDepth = val;
			*bestDist = dist;
		}
	}

	void depthFilter(cv::Mat &d, cv::Mat &out) {
		if (d.empty()) {
			puts("empty image");
			return;
		}
		cv::Mat dout = cv::Mat::zeros(d.size(), d.type());
		//cv::imshow("d", d);
		cv::Mat d2 = d <= 500;
		int erosion_type = cv::MORPH_ELLIPSE;
		int erosion_size = 1;
		cv::Mat element = cv::getStructuringElement(erosion_type,
			cv::Size(2 * erosion_size + 1, 2 * erosion_size + 1),
			cv::Point(erosion_size, erosion_size));

		//erode(d2,d2,element);
		//dilate(d2, d2, element);
		//dilate(d2, d2, element);
		//erode(d2, d2, element);
		cv::GaussianBlur(d2, d2, cv::Size(3, 3), 3, 3);
		//cv::imshow("d2", d2);
		//cv::Mat dcvt;
		//cvtDepth1628(d, dcvt);
		//cv::imshow("dcvt", dcvt);

		for (int r = 0; r < d.rows; ++r) {
			for (int c = 0; c < d.cols; ++c) {
				if (c > -1 && d2.at<unsigned char>(r, c) && heuristic == 0) {
					int co = c;
					for (; d2.at<unsigned char>(r, co) && co > 0; --co)continue;
					if (d2.at<unsigned char>(r, co) == 0) {
						dout.at<unsigned short>(r, c) = d.at<unsigned short>(r, co);
					}
					else {
						co = c;
						for (; d2.at<unsigned char>(r, co) && co < d.cols - 1; ++co)continue;
						dout.at<unsigned short>(r, c) = d.at<unsigned short>(r, co);
					}
				}
				else if (c > -1 && d2.at<unsigned char>(r, c) && heuristic == 1) {
					int co = c;
					for (; d2.at<unsigned char>(r, co) && co > 0; --co)continue;
					unsigned short val1 = d.at<unsigned short>(r, co);
					co = c;
					for (; d2.at<unsigned char>(r, co) && co < d.cols - 1; ++co)continue;
					unsigned short val2 = d.at<unsigned short>(r, co);

					int ro = r;
					for (; d2.at<unsigned char>(ro, c) && ro > 0; --ro)continue;
					unsigned short val3 = d.at<unsigned short>(ro, c);
					ro = r;
					for (; d2.at<unsigned char>(ro, c) && ro < d.rows - 1; ++ro)continue;
					unsigned short val4 = d.at<unsigned short>(ro, c);

					dout.at<unsigned short>(r, c) = std::max(std::max(val1, val2), std::max(val3, val4));
				}
				else if (c > -1 && d2.at<unsigned char>(r, c) && heuristic == 2) {
					unsigned short bestDepth = 0;
					int bestDist = INT_MAX;
					int co = c;
					for (; d2.at<unsigned char>(r, co) && co > 0; --co)continue;
					unsigned short val1 = d.at<unsigned short>(r, co);
					doDepthCriterion(&bestDepth, &bestDist, val1, co, c);
					co = c;
					for (; d2.at<unsigned char>(r, co) && co < d.cols - 1; ++co)continue;
					unsigned short val2 = d.at<unsigned short>(r, co);
					doDepthCriterion(&bestDepth, &bestDist, val2, co, c);

					int ro = r;
					for (; d2.at<unsigned char>(ro, c) && ro > 0; --ro)continue;
					unsigned short val3 = d.at<unsigned short>(ro, c);
					doDepthCriterion(&bestDepth, &bestDist, val3, ro, r);
					ro = r;
					for (; d2.at<unsigned char>(ro, c) && ro < d.rows - 1; ++ro)continue;
					unsigned short val4 = d.at<unsigned short>(ro, c);
					doDepthCriterion(&bestDepth, &bestDist, val4, ro, r);

					dout.at<unsigned short>(r, c) = bestDepth;
				}
				else {
					dout.at<unsigned short>(r, c) = d.at<unsigned short>(r, c);
				}
			}
		}
		dout.copyTo(out);
	}


#else
	xn::Context context;
	xn::DepthGenerator depth;
	xn::DepthMetaData depthMD;
	xn::ImageGenerator image;
	xn::ImageMetaData imageMD;
	xn::ScriptNode scriptNode;
	//RT::CustomVector<unsigned short> depthToShiftTable;
	//RT::CustomVector<unsigned short> regTable;
	unsigned short* realDepthFrame;

	unsigned short* finalDepthFrame;

#endif

public:
#ifdef USE_MS_KINECT_V2_SDK
	static const int        cDepthWidth = 512;
	static const int        cDepthHeight = 424;
	static const int        cColorWidth = 1920;
	static const int        cColorHeight = 1080;
#define USE_LOW_RESOLUTION

#ifdef USE_LOW_RESOLUTION
	static const int tDepthWidth = 640, tDepthHeight = 480;
	static const int tColorWidth = 640, tColorHeight = 480;
#elif defined USE_INTERMEDIARY_RESOLUTION
	static const int tDepthWidth = 1497, tDepthHeight = 1122; // based on final usable resolution after lens distortion
	static const int tColorWidth = 1497, tColorHeight = 1122; // based on final usable resolution after lens distortion
#else
	static const int tDepthWidth = cDepthWidth, tDepthHeight = cDepthHeight;
	static const int tColorWidth = cColorWidth, tColorHeight = cColorHeight;
#endif
	unsigned short* realDepthFrame;
	unsigned short* finalDepthFrame;

	int xClick, yClick;
	BYTE* videoFrame;
	//int eLeft = 230, eRight = 1727, eWidth = eRight - eLeft, eHeight = eWidth*tDepthHeight / tDepthWidth, eTop = (cColorHeight - std::min(eHeight, cColorHeight)) / 2, eBottom = cColorHeight - eTop;// MAXIMUM RESOLUTION
	int eHeight = cColorHeight, eTop = 0, eBottom = cColorHeight, eWidth = eHeight * 640 / 480, eLeft = (cColorWidth - eWidth) / 2, eRight = cColorWidth - eLeft;// conversion to lower RESOLUTION
#endif


	explicit KinectCamera() : //RT::BackgroundCamera()
#ifdef USE_MS_KINECT_SDK
		//,
		videoFrameResolution(videoFrameResolution),
		videoStreamHandle(0),
		depthStreamHandle(0),
		videoFrame(0),
		depthFrame(0),
		realDepthFrame(0)
#elif defined USE_MS_KINECT_V2_SDK

		/* TODO : KINECT V2 */

		,
		m_hWnd(NULL),
		m_nStartTime(0),
		m_nLastCounter(0),
		m_nFramesSinceUpdate(0),
		m_fFreq(0),
		m_nNextStatusTime(0LL),
		m_bSaveScreenshot(false),
		m_pKinectSensor(NULL),
		m_pCoordinateMapper(NULL),
		m_pMultiSourceFrameReader(NULL),
		m_pDepthCoordinates(NULL),
		m_pD2DFactory(NULL),
		m_imageFormat(ColorImageFormat_None),
		//m_pDrawCoordinateMapping(NULL),
		m_pOutputRGBX(NULL),
		m_pBackgroundRGBX(NULL),
		m_pColorRGBX(NULL),
		m_pCameraCoordinates(NULL),
		cropped_space(NULL),
		realDepthFrame(0),
		finalDepthFrame(0),
		videoFrame(0),
		xClick(0),
		yClick(0)


#else
		, realDepthFrame(0),
		finalDepthFrame(0)
#endif
	{
		//imageFormat = RT::B8G8R8_IMAGE_FORMAT;
		//imageFormat = RT::R8G8B8_IMAGE_FORMAT;
		m_imageFormat = ColorImageFormat_Bgra;

		m_pColorRGBX = new RGBQUAD[cColorHeight*cColorWidth];
		m_pCameraCoordinates = new CameraSpacePoint[cColorHeight*cColorWidth];
		cropped_space = new CameraSpacePoint[cColorHeight*cColorWidth]; // todo: some way to lowerbound this array size

																		// create heap storage for the coorinate mapping from color to depth
		m_pDepthCoordinates = new DepthSpacePoint[cColorWidth * cColorHeight];

		m_depth = cv::Mat(cColorHeight, cColorWidth, CV_16UC1);
		m_color = cv::Mat(cColorHeight, cColorWidth, CV_8UC3);

		data = (UINT16*)m_depth.data;
		datac = (uchar*)m_color.data;

		//this->setFx(fx_rgb);
		//this->setFy(fy_rgb);
		//this->setPx(cx_rgb);
		//this->setPy(cy_rgb);

		//this->distFactors[0] = k1_rgb;
		//this->distFactors[1] = k2_rgb;
		//this->distFactors[2] = p1_rgb;
		//this->distFactors[3] = p2_rgb;


		this->enableDepthBuffer();
		//this->enableVideoStream();
	}

	~KinectCamera() {
		this->release();
	}


	cv::Point3f getPointPosition(cv::Point2f p) {
		cv::Point3f res;
		//printf("getPointPosition %d %d\n", (int)p.x, (int)p.y);
#if defined USE_MS_KINECT_V2_SDK
		if (p.x >= 0 && p.x < tColorWidth && p.y >= 0 && p.y < tColorHeight) {
			const int x = static_cast<int>(p.x*eWidth / tColorWidth + 0.5f);
			const int y = static_cast<int>(p.y*eHeight / tColorHeight + 0.5f);
			const CameraSpacePoint csp = cropped_space[y*eWidth + x];
			res.x = csp.X;
			res.y = csp.Y;
			res.z = csp.Z;
		}
#endif
		//printf("res : %.3f %.3f %.3f\n", res.x, res.y, res.z);
		return res;
	}

	cv::Point3f getPointPositionAbsolute(cv::Point2f p) {
		cv::Point3f res;
		//printf("getPointPosition %d %d\n", (int)p.x, (int)p.y);
#if defined USE_MS_KINECT_V2_SDK
		if (p.x >= 0 && p.x < tColorWidth && p.y >= 0 && p.y < tColorHeight) {
			const int x = static_cast<int>(p.x + 0.5f);
			const int y = static_cast<int>(p.y + 0.5f);
			const CameraSpacePoint csp = cropped_space[y*eWidth + x];
			res.x = csp.X;
			res.y = csp.Y;
			res.z = csp.Z;
		}
#endif
		//printf("res : %.3f %.3f %.3f\n", res.x, res.y, res.z);
		return res;
	}


	void init(const CameraImageResolution videoFrameResolution) {
		puts("kinect controller init");
#ifdef USE_MS_KINECT_SDK
		HRESULT hr = NuiImageStreamOpen(
			NUI_IMAGE_TYPE_COLOR,
			videoFrameResolution,
			0,
			2, 0, &videoStreamHandle);

		if (FAILED(hr)) {
			std::cout << "NuiImageStreamOpen() for videoStreamHandle error" << std::endl;
			return;
		}
		hr = NuiImageStreamOpen(
			NUI_IMAGE_TYPE_DEPTH,
			NUI_IMAGE_RESOLUTION_640x480,
			0,
			2,
			0,
			&depthStreamHandle);
		if (FAILED(hr)) {
			std::cout << "NuiImageStreamOpen() for depthStreamHandle error" << std::endl;
			return;
		}

		this->depthToShiftTable.resize(XN_DEVICE_SENSOR_MAX_DEPTH);
		short depthToShiftTable[XN_DEVICE_SENSOR_MAX_DEPTH] = {
			0,16901,-24130,-15962,20890,-22534,-7793,2736,10633,16775,21688,25709,29059,31894,-31213,-29107,-27264,-25638,-24193,-22900,-21736,-20683,-19726,-18852,-18051,-17314,-16634,-16004,-15419,-14874,-14366,-13890,-13445,-13026,-12632,-12260,-11909,-11577,-11263,-10964,-10681,-10411,-10154,-9909,-9676,-9452,-9239,-9034,-8838,-8650,-8470,-8296,-8129,-7969,-7814,-7665,-7522,-7383,-7250,-7120,-6995,-6875,-6758,-6644,-6535,-6428,-6325,-6225,-6128,-6034,-5942,-5854,-5767,-5683,-5601,-5521,-5444,-5368,-5295,-5223,-5153,-5085,-5018,-4953,-4890,-4828,-4767,-4708,-4650,-4594,-4539,-4485,-4432,-4380,-4330,-4280,-4232,-4184,-4137,-4092,-4047,-4003,-3961,-3918,-3877,-3837,-3797,-3758,-3720,-3682,-3645,-3609,-3573,-3538,-3504,-3470,-3437,-3405,-3373,-3341,-3310,-3280,-3250,-3220,-3191,-3163,-3135,-3107,-3080,-3053,-3027,-3001,-2975,-2950,-2925,-2901,-2877,-2853,-2830,-2806,-2784,-2761,-2739,-2717,-2696,-2675,-2654,-2633,-2613,-2593,-2573,-2554,-2534,-2515,-2497,-2478,-2460,-2442,-2424,-2406,-2389,-2372,-2355,-2338,-2321,-2305,-2289,-2273,-2257,-2242,-2226,-2211,-2196,-2181,-2167,-2152,-2138,-2123,-2109,-2096,-2082,-2068,-2055,-2042,-2028,-2015,-2003,-1990,-1977,-1965,-1952,-1940,-1928,-1916,-1904,-1893,-1881,-1870,-1858,-1847,-1836,-1825,-1814,-1803,-1793,-1782,-1772,-1761,-1751,-1741,-1731,-1721,-1711,-1701,-1691,-1682,-1672,-1663,-1654,-1644,-1635,-1626,-1617,-1608,-1599,-1590,-1582,-1573,-1565,-1556,-1548,-1539,-1531,-1523,-1515,-1507,-1499,-1491,-1483,-1475,-1468,-1460,-1452,-1445,-1437,-1430,-1423,-1415,-1408,-1401,-1394,-1387,-1380,-1373,-1366,-1359,-1352,-1346,-1339,-1332,-1326,-1319,-1313,-1306,-1300,-1294,-1287,-1281,-1275,-1269,-1263,-1257,-1251,-1245,-1239,-1233,-1227,-1221,-1216,-1210,-1204,-1199,-1193,-1188,-1182,-1177,-1171,-1166,-1160,-1155,-1150,-1145,-1139,-1134,-1129,-1124,-1119,-1114,-1109,-1104,-1099,-1094,-1089,-1084,-1080,-1075,-1070,-1065,-1061,-1056,-1052,-1047,-1042,-1038,-1033,-1029,-1024,-1020,-1016,-1011,-1007,-1003,-998,-994,-990,-986,-982,-977,-973,-969,-965,-961,-957,-953,-949,-945,-941,-937,-933,-929,-926,-922,-918,-914,-911,-907,-903,-899,-896,-892,-888,-885,-881,-878,-874,-871,-867,-864,-860,-857,-853,-850,-847,-843,-840,-837,-833,-830,-827,-823,-820,-817,-814,-811,-807,-804,-801,-798,-795,-792,-789,-786,-783,-780,-777,-774,-771,-768,-765,-762,-759,-756,-753,-750,-747,-745,-742,-739,-736,-733,-731,-728,-725,-722,-720,-717,-714,-712,-709,-706,-704,-701,-698,-696,-693,-691,-688,-685,-683,-680,-678,-675,-673,-670,-668,-666,-663,-661,-658,-656,-653,-651,-649,-646,-644,-642,-639,-637,-635,-632,-630,-628,-625,-623,-621,-619,-617,-614,-612,-610,-608,-606,-603,-601,-599,-597,-595,-593,-591,-588,-586,-584,-582,-580,-578,-576,-574,-572,-570,-568,-566,-564,-562,-560,-558,-556,-554,-552,-550,-548,-546,-544,-542,-541,-539,-537,-535,-533,-531,-529,-527,-526,-524,-522,-520,-518,-517,-515,-513,-511,-509,-508,-506,-504,-502,-501,-499,-497,-496,-494,-492,-490,-489,-487,-485,-484,-482,-480,-479,-477,-475,-474,-472,-471,-469,-467,-466,-464,-463,-461,-459,-458,-456,-455,-453,-452,-450,-448,-447,-445,-444,-442,-441,-439,-438,-436,-435,-433,-432,-430,-429,-428,-426,-425,-423,-422,-420,-419,-417,-416,-415,-413,-412,-410,-409,-408,-406,-405,-404,-402,-401,-399,-398,-397,-395,-394,-393,-391,-390,-389,-387,-386,-385,-384,-382,-381,-380,-378,-377,-376,-375,-373,-372,-371,-369,-368,-367,-366,-364,-363,-362,-361,-360,-358,-357,-356,-355,-354,-352,-351,-350,-349,-348,-346,-345,-344,-343,-342,-341,-339,-338,-337,-336,-335,-334,-333,-331,-330,-329,-328,-327,-326,-325,-324,-322,-321,-320,-319,-318,-317,-316,-315,-314,-313,-312,-311,-310,-308,-307,-306,-305,-304,-303,-302,-301,-300,-299,-298,-297,-296,-295,-294,-293,-292,-291,-290,-289,-288,-287,-286,-285,-284,-283,-282,-281,-280,-279,-278,-277,-276,-275,-274,-273,-272,-272,-271,-270,-269,-268,-267,-266,-265,-264,-263,-262,-261,-260,-259,-259,-258,-257,-256,-255,-254,-253,-252,-251,-250,-250,-249,-248,-247,-246,-245,-244,-243,-243,-242,-241,-240,-239,-238,-237,-237,-236,-235,-234,-233,-232,-232,-231,-230,-229,-228,-227,-227,-226,-225,-224,-223,-223,-222,-221,-220,-219,-219,-218,-217,-216,-215,-215,-214,-213,-212,-211,-211,-210,-209,-208,-208,-207,-206,-205,-205,-204,-203,-202,-202,-201,-200,-199,-199,-198,-197,-196,-196,-195,-194,-193,-193,-192,-191,-190,-190,-189,-188,-188,-187,-186,-185,-185,-184,-183,-183,-182,-181,-181,-180,-179,-178,-178,-177,-176,-176,-175,-174,-174,-173,-172,-172,-171,-170,-170,-169,-168,-168,-167,-166,-166,-165,-164,-164,-163,-162,-162,-161,-160,-160,-159,-158,-158,-157,-157,-156,-155,-155,-154,-153,-153,-152,-151,-151,-150,-150,-149,-148,-148,-147,-146,-146,-145,-145,-144,-143,-143,-142,-142,-141,-140,-140,-139,-139,-138,-137,-137,-136,-136,-135,-134,-134,-133,-133,-132,-132,-131,-130,-130,-129,-129,-128,-128,-127,-126,-126,-125,-125,-124,-124,-123,-122,-122,-121,-121,-120,-120,-119,-119,-118,-117,-117,-116,-116,-115,-115,-114,-114,-113,-113,-112,-111,-111,-110,-110,-109,-109,-108,-108,-107,-107,-106,-106,-105,-105,-104,-104,-103,-103,-102,-102,-101,-100,-100,-99,-99,-98,-98,-97,-97,-96,-96,-95,-95,-94,-94,-93,-93,-92,-92,-91,-91,-90,-90,-90,-89,-89,-88,-88,-87,-87,-86,-86,-85,-85,-84,-84,-83,-83,-82,-82,-81,-81,-80,-80,-79,-79,-79,-78,-78,-77,-77,-76,-76,-75,-75,-74,-74,-73,-73,-73,-72,-72,-71,-71,-70,-70,-69,-69,-69,-68,-68,-67,-67,-66,-66,-65,-65,-65,-64,-64,-63,-63,-62,-62,-62,-61,-61,-60,-60,-59,-59,-59,-58,-58,-57,-57,-56,-56,-56,-55,-55,-54,-54,-53,-53,-53,-52,-52,-51,-51,-51,-50,-50,-49,-49,-49,-48,-48,-47,-47,-47,-46,-46,-45,-45,-45,-44,-44,-43,-43,-43,-42,-42,-41,-41,-41,-40,-40,-39,-39,-39,-38,-38,-38,-37,-37,-36,-36,-36,-35,-35,-34,-34,-34,-33,-33,-33,-32,-32,-31,-31,-31,-30,-30,-30,-29,-29,-28,-28,-28,-27,-27,-27,-26,-26,-26,-25,-25,-24,-24,-24,-23,-23,-23,-22,-22,-22,-21,-21,-21,-20,-20,-19,-19,-19,-18,-18,-18,-17,-17,-17,-16,-16,-16,-15,-15,-15,-14,-14,-14,-13,-13,-13,-12,-12,-12,-11,-11,-11,-10,-10,-10,-9,-9,-9,-8,-8,-8,-7,-7,-7,-6,-6,-6,-5,-5,-5,-4,-4,-4,-3,-3,-3,-2,-2,-2,-1,-1,-1,0,0,0,0,0,0,1,1,1,1,2,2,2,3,3,3,4,4,4,5,5,5,6,6,6,6,7,7,7,8,8,8,9,9,9,9,10,10,10,11,11,11,12,12,12,12,13,13,13,14,14,14,14,15,15,15,16,16,16,17,17,17,17,18,18,18,19,19,19,19,20,20,20,21,21,21,21,22,22,22,22,23,23,23,24,24,24,24,25,25,25,26,26,26,26,27,27,27,27,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,51,51,51,51,51,52,52,52,52,53,53,53,53,54,54,54,54,54,55,55,55,55,56,56,56,56,57,57,57,57,57,58,58,58,58,59,59,59,59,59,60,60,60,60,61,61,61,61,61,62,62,62,62,63,63,63,63,63,64,64,64,64,65,65,65,65,65,66,66,66,66,66,67,67,67,67,68,68,68,68,68,69,69,69,69,69,70,70,70,70,71,71,71,71,71,72,72,72,72,72,73,73,73,73,73,74,74,74,74,74,75,75,75,75,75,76,76,76,76,76,77,77,77,77,77,78,78,78,78,78,79,79,79,79,79,80,80,80,80,80,81,81,81,81,81,82,82,82,82,82,83,83,83,83,83,83,84,84,84,84,84,85,85,85,85,85,86,86,86,86,86,86,87,87,87,87,87,88,88,88,88,88,89,89,89,89,89,89,90,90,90,90,90,91,91,91,91,91,91,92,92,92,92,92,93,93,93,93,93,93,94,94,94,94,94,94,95,95,95,95,95,96,96,96,96,96,96,97,97,97,97,97,97,98,98,98,98,98,98,99,99,99,99,99,100,100,100,100,100,100,101,101,101,101,101,101,102,102,102,102,102,102,103,103,103,103,103,103,104,104,104,104,104,104,105,105,105,105,105,105,106,106,106,106,106,106,106,107,107,107,107,107,107,108,108,108,108,108,108,109,109,109,109,109,109,110,110,110,110,110,110,110,111,111,111,111,111,111,112,112,112,112,112,112,113,113,113,113,113,113,113,114,114,114,114,114,114,114,115,115,115,115,115,115,116,116,116,116,116,116,116,117,117,117,117,117,117,118,118,118,118,118,118,118,119,119,119,119,119,119,119,120,120,120,120,120,120,120,121,121,121,121,121,121,121,122,122,122,122,122,122,122,123,123,123,123,123,123,123,124,124,124,124,124,124,124,125,125,125,125,125,125,125,126,126,126,126,126,126,126,127,127,127,127,127,127,127,128,128,128,128,128,128,128,128,129,129,129,129,129,129,129,130,130,130,130,130,130,130,131,131,131,131,131,131,131,131,132,132,132,132,132,132,132,133,133,133,133,133,133,133,133,134,134,134,134,134,134,134,134,135,135,135,135,135,135,135,135,136,136,136,136,136,136,136,137,137,137,137,137,137,137,137,138,138,138,138,138,138,138,138,139,139,139,139,139,139,139,139,140,140,140,140,140,140,140,140,141,141,141,141,141,141,141,141,142,142,142,142,142,142,142,142,142,143,143,143,143,143,143,143,143,144,144,144,144,144,144,144,144,145,145,145,145,145,145,145,145,145,146,146,146,146,146,146,146,146,147,147,147,147,147,147,147,147,147,148,148,148,148,148,148,148,148,149,149,149,149,149,149,149,149,149,150,150,150,150,150,150,150,150,150,151,151,151,151,151,151,151,151,151,152,152,152,152,152,152,152,152,152,153,153,153,153,153,153,153,153,153,154,154,154,154,154,154,154,154,154,155,155,155,155,155,155,155,155,155,156,156,156,156,156,156,156,156,156,156,157,157,157,157,157,157,157,157,157,158,158,158,158,158,158,158,158,158,159,159,159,159,159,159,159,159,159,159,160,160,160,160,160,160,160,160,160,160,161,161,161,161,161,161,161,161,161,162,162,162,162,162,162,162,162,162,162,163,163,163,163,163,163,163,163,163,163,164,164,164,164,164,164,164,164,164,164,165,165,165,165,165,165,165,165,165,165,166,166,166,166,166,166,166,166,166,166,167,167,167,167,167,167,167,167,167,167,167,168,168,168,168,168,168,168,168,168,168,169,169,169,169,169,169,169,169,169,169,169,170,170,170,170,170,170,170,170,170,170,171,171,171,171,171,171,171,171,171,171,171,172,172,172,172,172,172,172,172,172,172,172,173,173,173,173,173,173,173,173,173,173,173,174,174,174,174,174,174,174,174,174,174,174,175,175,175,175,175,175,175,175,175,175,175,176,176,176,176,176,176,176,176,176,176,176,177,177,177,177,177,177,177,177,177,177,177,177,178,178,178,178,178,178,178,178,178,178,178,179,179,179,179,179,179,179,179,179,179,179,179,180,180,180,180,180,180,180,180,180,180,180,180,181,181,181,181,181,181,181,181,181,181,181,181,182,182,182,182,182,182,182,182,182,182,182,182,183,183,183,183,183,183,183,183,183,183,183,183,184,184,184,184,184,184,184,184,184,184,184,184,185,185,185,185,185,185,185,185,185,185,185,185,186,186,186,186,186,186,186,186,186,186,186,186,186,187,187,187,187,187,187,187,187,187,187,187,187,188,188,188,188,188,188,188,188,188,188,188,188,188,189,189,189,189,189,189,189,189,189,189,189,189,189,190,190,190,190,190,190,190,190,190,190,190,190,190,191,191,191,191,191,191,191,191,191,191,191,191,191,192,192,192,192,192,192,192,192,192,192,192,192,192,192,193,193,193,193,193,193,193,193,193,193,193,193,193,194,194,194,194,194,194,194,194,194,194,194,194,194,194,195,195,195,195,195,195,195,195,195,195,195,195,195,195,196,196,196,196,196,196,196,196,196,196,196,196,196,196,197,197,197,197,197,197,197,197,197,197,197,197,197,197,198,198,198,198,198,198,198,198,198,198,198,198,198,198,199,199,199,199,199,199,199,199,199,199,199,199,199,199,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,201,201,201,201,201,201,201,201,201,201,201,201,201,201,201,202,202,202,202,202,202,202,202,202,202,202,202,202,202,202,203,203,203,203,203,203,203,203,203,203,203,203,203,203,203,204,204,204,204,204,204,204,204,204,204,204,204,204,204,204,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,205,206,206,206,206,206,206,206,206,206,206,206,206,206,206,206,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,207,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,208,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,209,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,210,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,211,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,212,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,213,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,214,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,215,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,216,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,217,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,218,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,219,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,220,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,221,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,222,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,223,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,224,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,225,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,226,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,227,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,228,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,229,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,230,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,231,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,232,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,233,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,234,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,235,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,236,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,237,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,238,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,239,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,240,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,241,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,242,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,243,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,244,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,245,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,246,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,247,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,248,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,249,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,250,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,251,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,252,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,253,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,256,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,257,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,258,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,259,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,260,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,261,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,262,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,263,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,264,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,265,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,266,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,267,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,268,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,269,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,270,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,271,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,272,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,273,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,274,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,275,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,276,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,277,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,278,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,279,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,280,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,281,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,282,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,283,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,284,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,285,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,286,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,287,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,288,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,289,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,290,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,291,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,292,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,293,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,294,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,295,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,296,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,297,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,298,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,299,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,301,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,302,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,303,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,304,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,305,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,306,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,307,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,308,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,309,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,310,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,311,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,312,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,313,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,314,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,315,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,316,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,317,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,318,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,319,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,320,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,321,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,322,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,323,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,324,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,325,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,326,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,327,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,328,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,329,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330,330 };
		memcpy(&this->depthToShiftTable[0], &depthToShiftTable[0], XN_DEVICE_SENSOR_MAX_DEPTH * sizeof(short));
		unsigned int totalValues = XN_DEPTH_XRES * XN_DEPTH_YRES * 2;
		regTable.resize(totalValues);
		std::ifstream is("..\\..\\data\\CameraCalibration\\KinectRegTable1080.txt");


		for (unsigned int i = 0; i < totalValues; ++i)
			is >> regTable[i];
		is.close();
		this->enableDepthBuffer();
		//this->disableDepthBuffer();

		DWORD videoWidth;
		DWORD videoHeight;
		NuiImageResolutionToSize(videoFrameResolution, videoWidth, videoHeight);

		this->videoFrameInfo.setWidth(videoWidth);
		this->videoFrameInfo.setHeight(videoHeight);
		this->videoFrameInfo.setPitch(videoWidth * sizeof(unsigned int));
		this->depthBufferInfo.setWidth(640);
		this->depthBufferInfo.setHeight(480);
		this->depthBufferInfo.setPitch(640 * sizeof(unsigned short));
		this->realDepthFrame = new unsigned short[640 * 480];

#elif defined USE_MS_KINECT_V2_SDK

		/* TODO : KINECT V2 */


		this->enableDepthBuffer();
		//this->enableVideoStream();

		/*this->setFx(fx_rgb);
		this->setFy(fy_rgb);
		this->setPx(cx_rgb);
		this->setPy(cy_rgb);

		this->distFactors[0] = k1_rgb;
		this->distFactors[1] = k2_rgb;
		this->distFactors[2] = p1_rgb;
		this->distFactors[3] = p2_rgb;*/

		//this->videoFrameInfo.setWidth(tColorWidth);
		//this->videoFrameInfo.setHeight(tColorHeight);
		//this->videoFrameInfo.setPitch(tColorWidth * 3);
		//this->videoFrameInfo.setFormat(RT::R8G8B8_IMAGE_FORMAT);
		//this->depthBufferInfo.setWidth(tDepthWidth);
		//this->depthBufferInfo.setHeight(tDepthHeight);
		//this->depthBufferInfo.setPitch(tDepthWidth * sizeof(unsigned short));
		this->realDepthFrame = new unsigned short[cDepthWidth * cDepthHeight];
		this->finalDepthFrame = new unsigned short[tDepthWidth * tDepthHeight];
		this->videoFrame = new BYTE[tColorWidth * tColorHeight * 3];

		/*for (int i = 0; i < tDepthWidth * tDepthHeight; ++i) {
		this->realDepthFrame[i] = this->finalDepthFrame[i] = (UINT16) 750;
		}
		for (int i = 0; i < tColorWidth * tColorHeight*3; i++) {
		this->videoFrame[i] = (BYTE)rand()%255;
		}*/


		HRESULT hr;

		hr = GetDefaultKinectSensor(&m_pKinectSensor);
		if (FAILED(hr))
		{
			return;
		}

		if (m_pKinectSensor)
		{
			// Initialize the Kinect and get coordinate mapper and the frame reader

			if (SUCCEEDED(hr))
			{
				hr = m_pKinectSensor->get_CoordinateMapper(&m_pCoordinateMapper);
			}

			hr = m_pKinectSensor->Open();

			if (SUCCEEDED(hr))
			{
				hr = m_pKinectSensor->OpenMultiSourceFrameReader(
					FrameSourceTypes::FrameSourceTypes_Depth | FrameSourceTypes::FrameSourceTypes_Color,
					&m_pMultiSourceFrameReader);
			}
		}

		if (!m_pKinectSensor || FAILED(hr))
		{
			printf("No Kinect Found!\n");
			return;
		}

		// after this is everything ok for Kinect V2

		/*this->depthToShiftTable.resize(10000);
		unsigned short localDepthToShiftTable[10000] = {
		};
		memcpy(&this->depthToShiftTable[0], &localDepthToShiftTable[0], 10000 *sizeof(unsigned short));*/
		/*unsigned int totalValues = 640 * 480* 2;
		regTable.resize(totalValues);
		std::ifstream is("..\\..\\data\\CameraCalibration\\KinectRegTable1080.txt");


		for (unsigned int i = 0; i < totalValues; ++i)
		is >> regTable[i];
		is.close();*/



#else

		XnStatus rc;

		xn::EnumerationErrors errors;
		rc = context.InitFromXmlFile("..\\..\\data\\Camera\\OpenNI\\KinectConfig.xml", scriptNode, &errors);
		if (rc == XN_STATUS_NO_NODE_PRESENT)
		{
			XnChar strError[1024];
			errors.ToString(strError, 1024);
			printf("%s\n", strError);
			//return (rc);
		}
		else if (rc != XN_STATUS_OK)
		{
			printf("Open failed: %s\n", xnGetStatusString(rc));
			//return (rc);
		}

		rc = context.FindExistingNode(XN_NODE_TYPE_DEPTH, depth);
		if (rc != XN_STATUS_OK)
		{
			printf("No depth node exists! Check your XML.");
			//return 1;
		}

		rc = context.FindExistingNode(XN_NODE_TYPE_IMAGE, image);
		if (rc != XN_STATUS_OK)
		{
			printf("No image node exists! Check your XML.");
			//return 1;
		}

		this->depthToShiftTable.resize(XN_DEVICE_SENSOR_MAX_DEPTH);
		//unsigned short localDepthToShiftTable[10000] = {
		//	};
		unsigned short localDepthToShiftTable[10000] = {
			};

		memcpy(&this->depthToShiftTable[0], &localDepthToShiftTable[0], XN_DEVICE_SENSOR_MAX_DEPTH * sizeof(unsigned short));
		unsigned int totalValues = XN_DEPTH_XRES * XN_DEPTH_YRES * 2;
		regTable.resize(totalValues);
		std::ifstream is("..\\..\\data\\CameraCalibration\\KinectRegTable1080.txt");


		for (unsigned int i = 0; i < totalValues; ++i)
			is >> regTable[i];
		is.close();



		/*XnStatus nRetVal = XN_STATUS_OK;
		nRetVal = context.Init();
		CHECK_RC(nRetVal, "Initialize context");
		nRetVal = depth.Create(context);
		CHECK_RC(nRetVal, "Create depth generator");

		nRetVal = context.StartGeneratingAll();
		CHECK_RC(nRetVal, "StartGeneratingAll");

		nRetVal = image.Create(context);
		CHECK_RC(nRetVal, "Create video generator");*/

		this->enableDepthBuffer();
		depth.GetMetaData(depthMD);
		image.GetMetaData(imageMD);

		// Hybrid mode isn't supported in this sample
		if (imageMD.FullXRes() != depthMD.FullXRes() || imageMD.FullYRes() != depthMD.FullYRes())
		{
			printf("The device depth and image resolution must be equal!\n");
			//return 1;
		}

		// RGB is the only image format supported.
		if (imageMD.PixelFormat() != XN_PIXEL_FORMAT_RGB24)
		{
			printf("The device image format must be RGB24\n");
			//return 1;
		}


		depth.GetAlternativeViewPointCap().SetViewPoint(image);
		this->videoFrameInfo.setWidth(imageMD.XRes());
		this->videoFrameInfo.setHeight(imageMD.YRes());
		this->videoFrameInfo.setPitch(imageMD.XRes() * imageMD.BytesPerPixel());
		//this->videoFrameInfo.setFormat(RT::R8G8B8_IMAGE_FORMAT);
		this->depthBufferInfo.setWidth(depthMD.XRes());
		this->depthBufferInfo.setHeight(depthMD.YRes());
		//std::cout << "HAHAI"  << depthMD.BytesPerPixel() << std::endl;
		this->depthBufferInfo.setPitch(depthMD.XRes() * depthMD.BytesPerPixel());
		this->realDepthFrame = new unsigned short[this->depthBufferInfo.getWidth()*this->depthBufferInfo.getHeight()];

		this->finalDepthFrame = new unsigned short[this->depthBufferInfo.getWidth()*this->depthBufferInfo.getHeight()];

		for (int i = 0; i < this->depthBufferInfo.getWidth()*this->depthBufferInfo.getHeight(); i++) {
			this->finalDepthFrame[i] = depthMD.Data()[i];
		}


#endif

	}

	void getDepthFrameResolution(unsigned int& width, unsigned int& height) {
		//width = this->depthBufferInfo.getWidth();
		//height = this->depthBufferInfo.getHeight();
		printf("depth frame resolution %d %d\n", width, height);
	}

	void getVideoFrameResolution(unsigned int& width, unsigned int& height) {
		//width = this->videoFrameInfo.getWidth();
		//height = this->videoFrameInfo.getHeight();
		printf("color frame resolution %d %d\n", width, height);
	}

	void release() {
#ifdef USE_MS_KINECT_SDK

#elif defined USE_MS_KINECT_V2_SDK

		/* TODO : KINECT V2 */

		// done with frame reader
		SafeRelease(m_pMultiSourceFrameReader);

		// done with coordinate mapper
		SafeRelease(m_pCoordinateMapper);

		// done with depth coordinates
		if (m_pDepthCoordinates)
		{
			delete[] m_pDepthCoordinates;
			m_pDepthCoordinates = NULL;
		}

		// done with camera coordinates
		if (m_pCameraCoordinates)
		{
			delete[] m_pCameraCoordinates;
			m_pCameraCoordinates = NULL;
		}

		if (cropped_space)
		{
			delete[] cropped_space;
			cropped_space = NULL;
		}

		// close the Kinect Sensor
		if (m_pKinectSensor)
		{
			m_pKinectSensor->Close();
		}

		SafeRelease(m_pKinectSensor);

		if (this->realDepthFrame) {
			delete[] realDepthFrame;
			delete[] finalDepthFrame;
		}
		if (this->videoFrame) {
			delete[] videoFrame;
		}


#else
		image.Release();
		depth.Release();
		context.Release();
		if (this->realDepthFrame) {
			delete[] realDepthFrame;
			delete[] finalDepthFrame;
		}
#endif

	}

	void updateBuffers() {
		//puts("updateBuffers");

		newVideoFrame = false;
		newDepthFrame = false;
		//return;


#ifdef USE_MS_KINECT_SDK

		HRESULT hr = NuiImageStreamGetNextFrame(
			videoStreamHandle,
			0,
			&videoFrame);
		if (FAILED(hr)) {
			//std::cout << "FAIOU" << std::endl;
			return;
		}
		else {
			//std::cout << "HAHAI" << std::endl;
			newVideoFrame = true;
		}

		newDepthFrame = false;
		hr = NuiImageStreamGetNextFrame(
			depthStreamHandle,
			0,
			&depthFrame);
		if (FAILED(hr)) {
			//std::cout << "FAIOU" << std::endl;
			return;
		}
		else {
			//std::cout << "HAHAI" << std::endl;
			newDepthFrame = true;
		}

#elif defined USE_MS_KINECT_V2_SDK

		/* TODO : KINECT V2 */

		bool saveImages = GetAsyncKeyState('S');


		if (!m_pMultiSourceFrameReader)
		{
			puts("treta");
			return;
		}
		//puts("masoq?");

		IMultiSourceFrame* pMultiSourceFrame = NULL;
		IDepthFrame* pDepthFrame = NULL;
		IColorFrame* pColorFrame = NULL;
		IBodyIndexFrame* pBodyIndexFrame = NULL;

		HRESULT hr = m_pMultiSourceFrameReader->AcquireLatestFrame(&pMultiSourceFrame);

		if (SUCCEEDED(hr))
		{
			IDepthFrameReference* pDepthFrameReference = NULL;

			hr = pMultiSourceFrame->get_DepthFrameReference(&pDepthFrameReference);
			if (SUCCEEDED(hr))
			{
				hr = pDepthFrameReference->AcquireFrame(&pDepthFrame);
			}

			SafeRelease(pDepthFrameReference);
		}

		if (SUCCEEDED(hr))
		{
			IColorFrameReference* pColorFrameReference = NULL;

			hr = pMultiSourceFrame->get_ColorFrameReference(&pColorFrameReference);
			if (SUCCEEDED(hr))
			{
				hr = pColorFrameReference->AcquireFrame(&pColorFrame);
			}

			SafeRelease(pColorFrameReference);
		}

		if (SUCCEEDED(hr))
		{
			/*IBodyIndexFrameReference* pBodyIndexFrameReference = NULL;

			hr = pMultiSourceFrame->get_BodyIndexFrameReference(&pBodyIndexFrameReference);
			if (SUCCEEDED(hr))
			{
			hr = pBodyIndexFrameReference->AcquireFrame(&pBodyIndexFrame);
			}

			SafeRelease(pBodyIndexFrameReference);*/
		}

		if (SUCCEEDED(hr))
		{
			INT64 nDepthTime = 0;
			IFrameDescription* pDepthFrameDescription = NULL;
			int nDepthWidth = 0;
			int nDepthHeight = 0;
			UINT nDepthBufferSize = 0;
			UINT16 *pDepthBuffer = NULL;

			IFrameDescription* pColorFrameDescription = NULL;
			int nColorWidth = 0;
			int nColorHeight = 0;
			m_imageFormat = ColorImageFormat_None;
			UINT nColorBufferSize = 0;
			RGBQUAD *pColorBuffer = NULL;

			IFrameDescription* pBodyIndexFrameDescription = NULL;
			int nBodyIndexWidth = 0;
			int nBodyIndexHeight = 0;
			UINT nBodyIndexBufferSize = 0;
			BYTE *pBodyIndexBuffer = NULL;

			// get depth frame data

			hr = pDepthFrame->get_RelativeTime(&nDepthTime);

			if (SUCCEEDED(hr))
			{
				hr = pDepthFrame->get_FrameDescription(&pDepthFrameDescription);
			}

			if (SUCCEEDED(hr))
			{
				hr = pDepthFrameDescription->get_Width(&nDepthWidth);
			}

			if (SUCCEEDED(hr))
			{
				hr = pDepthFrameDescription->get_Height(&nDepthHeight);
			}

			if (SUCCEEDED(hr))
			{
				hr = pDepthFrame->AccessUnderlyingBuffer(&nDepthBufferSize, &pDepthBuffer);
			}

			// get color frame data

			if (SUCCEEDED(hr))
			{
				hr = pColorFrame->get_FrameDescription(&pColorFrameDescription);
			}

			if (SUCCEEDED(hr))
			{
				hr = pColorFrameDescription->get_Width(&nColorWidth);
			}

			if (SUCCEEDED(hr))
			{
				hr = pColorFrameDescription->get_Height(&nColorHeight);
			}

			if (SUCCEEDED(hr))
			{
				hr = pColorFrame->get_RawColorImageFormat(&m_imageFormat);
			}

			if (SUCCEEDED(hr))
			{
				//puts("get color");

				if (m_imageFormat == ColorImageFormat_Bgra)
				{
					puts("TUDO OK");
					hr = pColorFrame->AccessRawUnderlyingBuffer(&nColorBufferSize, reinterpret_cast<BYTE**>(&pColorBuffer));
				}
				else if (m_pColorRGBX)
				{
					pColorBuffer = m_pColorRGBX;
					nColorBufferSize = cColorWidth * cColorHeight * sizeof(RGBQUAD);
					hr = pColorFrame->CopyConvertedFrameDataToArray(nColorBufferSize, reinterpret_cast<BYTE*>(pColorBuffer), ColorImageFormat_Bgra);
				}
				else
				{
					//puts("e_fail");

					hr = E_FAIL;
				}
			}

			// get body index frame data

			if (SUCCEEDED(hr))
			{
				//puts("getbodyindexframe description");

				//hr = pBodyIndexFrame->get_FrameDescription(&pBodyIndexFrameDescription);
			}

			if (SUCCEEDED(hr))
			{
				//hr = pBodyIndexFrameDescription->get_Width(&nBodyIndexWidth);
			}

			if (SUCCEEDED(hr))
			{
				//hr = pBodyIndexFrameDescription->get_Height(&nBodyIndexHeight);
			}

			if (SUCCEEDED(hr))
			{
				//puts("bodyIndex");
				//hr = pBodyIndexFrame->AccessUnderlyingBuffer(&nBodyIndexBufferSize, &pBodyIndexBuffer);
			}

			if (SUCCEEDED(hr))
			{
				//puts("process");
				/*ProcessFrame(nDepthTime, pDepthBuffer, nDepthWidth, nDepthHeight,
				pColorBuffer, nColorWidth, nColorHeight,
				pBodyIndexBuffer, nBodyIndexWidth, nBodyIndexHeight);*/

				// copy depth
				/*
				memcpy(realDepthFrame, pDepthBuffer, sizeof(UINT16)*cDepthWidth*cDepthHeight);
				memcpy(finalDepthFrame, pDepthBuffer, sizeof(UINT16)*cDepthWidth*cDepthHeight);
				*/
				// Make sure we've received valid data
				if (!m_pCoordinateMapper) puts("m_pCoordinateMapper is null");
				if (!m_pDepthCoordinates) puts("m_pDepthCoordinates is null");
				if (!pDepthBuffer) puts("pDepthBuffer is null");
				if (!m_pCameraCoordinates) puts("m_pCameraCoordinates is null");
				if (m_pCoordinateMapper && m_pDepthCoordinates && m_pCameraCoordinates &&
					pDepthBuffer && (nDepthWidth == cDepthWidth) && (nDepthHeight == cDepthHeight) &&
					pColorBuffer && (nColorWidth == cColorWidth) && (nColorHeight == cColorHeight) //&&
																								   //pBodyIndexBuffer && (nBodyIndexWidth == cDepthWidth) && (nBodyIndexHeight == cDepthHeight)
					)
				{
					HRESULT hr = E_FAIL;
					hr = m_pCoordinateMapper->MapColorFrameToDepthSpace(nDepthWidth * nDepthHeight, (UINT16*)pDepthBuffer, nColorWidth * nColorHeight, m_pDepthCoordinates);
					if (SUCCEEDED(hr)) {
						hr = m_pCoordinateMapper->MapColorFrameToCameraSpace(nDepthWidth * nDepthHeight, (UINT16*)pDepthBuffer, nColorWidth * nColorHeight, m_pCameraCoordinates);
					}
#ifdef KINECT_CONTROLLER_GET_CAMERA_INTRINSICS
					CameraIntrinsics cameraIntrinsics;
					hr = m_pCoordinateMapper->GetDepthCameraIntrinsics(&cameraIntrinsics);
					if (SUCCEEDED(hr)) {
						cameraIntrinsics.
					}
					else {
						return;
					}
#endif
					//puts("entered here");


					std::memset(realDepthFrame, 0, sizeof(UINT16)*cDepthWidth*cDepthHeight);
					std::memset(finalDepthFrame, 0, sizeof(UINT16)*tDepthWidth*tDepthHeight);
					if (SUCCEEDED(hr))
					{
						//puts("and here?????wtf?");

						/*cv::Mat depth = cv::Mat(cDepthHeight, cDepthWidth, CV_16UC1);
						std::memcpy(depth.data, pDepthBuffer, nDepthBufferSize*sizeof(UINT16));
						std::printf("edimensions %d %d\n", eWidth, eHeight);*/

						//cv::Mat depth = cv::Mat(eHeight, eWidth, CV_16UC1);



						//std::memset(data, 0, sizeof(UINT16)*eHeight*eWidth);
						std::memset(data, 0, sizeof(UINT16)*cColorHeight*cColorWidth);
						std::memset(datac, 0, sizeof(uchar)*cColorHeight*cColorWidth * 3);
						int dtaidx = 0;// data index
						for (int colorIndex = 0; colorIndex < (nColorWidth*nColorHeight); ++colorIndex)
						{
							DepthSpacePoint p = m_pDepthCoordinates[colorIndex];
							int xpos = colorIndex % nColorWidth, ypos = colorIndex / nColorWidth;
							//if (xpos < eLeft && xpos >= eRight && ypos < eTop && ypos >= eBottom) continue; //ignore pixels that we won't use
							// Values that are negative infinity means it is an invalid color to depth mapping so we
							// skip processing for this pixel
							if (p.X != -std::numeric_limits<float>::infinity() && p.Y != -std::numeric_limits<float>::infinity())
							{
								int depthX = static_cast<int>(p.X + 0.5f);
								int depthY = static_cast<int>(p.Y + 0.5f);

								if ((depthX >= 0 && depthX < nDepthWidth) && (depthY >= 0 && depthY < nDepthHeight))
								{
									int dIndex = depthX + (depthY * cDepthWidth);
									//data[dtaidx] = (UINT16)pDepthBuffer[dIndex];
									data[colorIndex] = (UINT16)pDepthBuffer[dIndex];
									datac[colorIndex * 3] = (uchar)pColorBuffer[colorIndex].rgbBlue;
									datac[colorIndex * 3 + 1] = (uchar)pColorBuffer[colorIndex].rgbGreen;
									datac[colorIndex * 3 + 2] = (uchar)pColorBuffer[colorIndex].rgbRed;
									//++dtaidx;
								}
							}
						}

						//std::memset(realDepthFrame, 0, sizeof(UINT16) * 640 * 480);
						//cv::Mat depth = cv::Mat(cDepthHeight, cDepthWidth, CV_16UC1);
						//std::memcpy(depth.data, pDepthBuffer, nDepthBufferSize*sizeof(UINT16));
						cv::Mat cropped_depth, cropped_color;
						cv::Mat c_depth = m_depth.clone();
						/*{
						for (int i = eTop; i < eBottom - 1; i++) {
						for (int j = eLeft; j < eRight - 1; j++) {
						*((UINT16*)this->finalDepthFrame + (((j - eLeft) + (i - eTop)*eWidth) << 1)) = (UINT16)((int)c_depth.data[(i*cColorWidth + j) << 1] << 8) | (int)c_depth.data[((i*cColorWidth + j) << 1) + 1];
						}
						}
						}*/
						/*c_depth.convertTo(c_depth, CV_32FC1);
						c_depth -= 500.f;
						c_depth *= 255.f / 8000.f;
						c_depth.convertTo(c_depth, CV_8UC1);*/
						//printf("c_depth dimensions %d %d\n", c_depth.cols, c_depth.rows);
						//cv::imshow("c_depth", c_depth);
						////c_depth(cv::Rect(cv::Point2i(eLeft, eTop), cv::Point2i(eRight, eBottom)));// .copyTo(cropped_depth);
						//printf("resolution : %d %d\n", eWidth, eHeight);
						cropped_depth.create(cv::Size(eWidth, eHeight), CV_16UC1);
						cropped_color.create(cv::Size(eWidth, eHeight), CV_8UC3);
						//printf("cropped_depth dimensions %d %d\n", cropped_depth.cols, cropped_depth.rows);
						//copy data from rectangle
						if (cropped_depth.data == NULL) puts("cropped_depth is null");
						if (c_depth.data == NULL) puts("c_depth is null");
						{
							for (int i = eTop; i < eBottom; i++) {
								for (int j = eLeft; j < eRight; j++) {

									//depth
									cropped_depth.data[(((j - eLeft) + (i - eTop)*eWidth) << 1)] = c_depth.data[(i*cColorWidth + j) << 1];
									cropped_depth.data[(((j - eLeft) + (i - eTop)*eWidth) << 1) + 1] = c_depth.data[((i*cColorWidth + j) << 1) + 1];

									//color
									/*cropped_color.data[(((j - eLeft) + (i - eTop)*eWidth) * 3)] = m_color.data[((i*cColorWidth + j) * 3)];
									cropped_color.data[(((j - eLeft) + (i - eTop)*eWidth) * 3) + 1] = m_color.data[((i*cColorWidth + j) * 3) + 1];
									cropped_color.data[(((j - eLeft) + (i - eTop)*eWidth) * 3) + 2] = m_color.data[((i*cColorWidth + j) * 3) + 2];*/

									cropped_color.data[(((j - eLeft) + (i - eTop)*eWidth) * 3)] = (uchar)pColorBuffer[i*cColorWidth + j].rgbBlue;
									cropped_color.data[(((j - eLeft) + (i - eTop)*eWidth) * 3) + 1] = (uchar)pColorBuffer[i*cColorWidth + j].rgbGreen;
									cropped_color.data[(((j - eLeft) + (i - eTop)*eWidth) * 3) + 2] = (uchar)pColorBuffer[i*cColorWidth + j].rgbRed;

									//camera space point
									cropped_space[((j - eLeft) + (i - eTop)*eWidth)] = m_pCameraCoordinates[i*cColorWidth + j];

								}
							}
						}

						//depth
						//cv::resize(cropped_depth, cropped_depth, cv::Size(640, 480));
						cv::resize(cropped_depth, cropped_depth, cv::Size(640, 480), 0, 0, CV_INTER_NN);

						//depth adjustment heuristic
#ifdef USE_DEPTH_HEURISTIC
						if (enableDepthHeuristic) depthFilter(cropped_depth, cropped_depth);
#endif //USE_DEPTH_HEURISTIC
						//cv::imshow("cropped depth", cropped_depth);

						//std::memcpy((uchar*)this->realDepthFrame, (uchar*)cropped_depth.data, sizeof(UINT16) * 640 * 480);
						std::memcpy((uchar*)this->finalDepthFrame, (uchar*)cropped_depth.data, sizeof(UINT16) * 640 * 480);





						if (saveImages) {
							try {
								std::vector<int> compression_params;
								compression_params.push_back(cv::IMWRITE_PNG_COMPRESSION);
								compression_params.push_back(9);
								SYSTEMTIME st;
								GetLocalTime(&st);
								std::stringstream strs;
								strs << "cropped_color_" <<
									st.wYear << "_" <<
									st.wMonth << "_" <<
									st.wDay << "_" <<
									st.wHour << "_" <<
									st.wMinute << "_" <<
									st.wSecond
									<< ".png";
								cv::imwrite(strs.str(), cropped_color, compression_params);
								strs.str("");
								strs.clear();

								compression_params.clear();
								compression_params.push_back(cv::IMWRITE_PXM_BINARY);
								compression_params.push_back(0);
								strs << "cropped_depth_" <<
									st.wYear << "_" <<
									st.wMonth << "_" <<
									st.wDay << "_" <<
									st.wHour << "_" <<
									st.wMinute << "_" <<
									st.wSecond
									<< ".ppm";
								cv::imwrite(strs.str(), cropped_depth, compression_params);
							}
							catch (std::runtime_error& ex) {
								std::fprintf(stderr, "Exception converting image to some format: %s\n", ex.what());
								//return 1;
							}
						}

						//color
						cv::resize(cropped_color, cropped_color, cv::Size(640, 480));
						std::memcpy((uchar*)this->videoFrame, (uchar*)cropped_color.data, 640 * 480 * 3);
						//cv::imshow("cropped_color resized", cropped_color);
						//cv::imshow("cropped depth resized", cropped_depth);
						//cropped_depth -= 500.f;
						//cropped_depth *= 255.f / 8000.f;
						//cropped_depth.convertTo(cropped_depth, CV_8UC1);
						////std::memcpy((uchar*)this->realDepthFrame, (uchar*)m_depth.data, sizeof(UINT16) * 640 * 480);
						//cv::imshow("final depth", cropped_depth);

						//#define USE_OPENCV_FOR_DEBUG
#ifdef USE_OPENCV_FOR_DEBUG
						int b, g, r, d;
						b = datac[(cColorWidth* yClick + xClick) * 3];
						g = datac[(cColorWidth* yClick + xClick) * 3 + 1];
						r = datac[(cColorWidth* yClick + xClick) * 3 + 2];
						d = (int)data[xClick + (cColorWidth* yClick)];
						std::cout << "position : " << xClick << " " << yClick;
						std::cout << " color " << (int)r << " " << (int)g << " " << (int)b;
						std::cout << " depth " << (int)d << std::endl;
						//data[xClick + (cColorWidth* yClick)] = 8000;

						m_color.data[(cColorWidth* yClick + xClick) * 3] = (uchar)0x00;
						m_color.data[(cColorWidth* yClick + xClick) * 3 + 1] = (uchar)0x00;
						m_color.data[(cColorWidth* yClick + xClick) * 3 + 2] = (uchar)0xff;
						cv::imshow("color", m_color);
						cv::imshow("depthCuttedAdjusted", m_depth);
						cv::Mat i_depth = m_depth.clone();
						i_depth.convertTo(i_depth, CV_32FC1);
						cv::Mat mask = m_depth >= 500;
						cv::imshow("mask", mask);
						i_depth -= 500.f;
						i_depth *= 1.f / 8000.f;
						i_depth = 1.f - i_depth;
						cv::Mat f_depth;
						i_depth.copyTo(f_depth, mask);
						f_depth *= 255.f;
						f_depth.convertTo(f_depth, CV_8UC1);
						cv::cvtColor(f_depth, f_depth, cv::COLOR_GRAY2BGR);
						f_depth.data[(cColorWidth* yClick + xClick) * 3] = (uchar)0x00;
						f_depth.data[(cColorWidth* yClick + xClick) * 3 + 1] = (uchar)0x00;
						f_depth.data[(cColorWidth* yClick + xClick) * 3 + 2] = (uchar)0xff;
						cv::imshow("depth", f_depth);
#endif // USE_OPENCV_FOR_DEBUG


						////std::memcpy((uchar*)this->realDepthFrame, (uchar*)depth.data, sizeof(UINT16) * 640 * 480);
						////printf("first bytes %2X%2X %2X%2X ", realDepthFrame[640*50 +200], realDepthFrame[640 * 50 + 200 + 1], realDepthFrame[640 * 50 + 200 + 2], realDepthFrame[640 * 50 + 200 + 3]);

						//depth.convertTo(depth, CV_32FC1);
						//depth -= 500.f;
						//depth /= 8000.f;
						//depth *= 255.f;
						//depth.convertTo(depth, CV_8UC1);
						//{
						//	//for (int idx = 0)
						//}

						////printf("buffer size %d\n", nDepthBufferSize);
						//cv::imshow("depth", depth);
						////{
						////	const int ibegin = (cDepthHeight - 480) / 2,
						////		iend = cDepthHeight - ((cDepthHeight - 480) / 2),
						////		jbegin = (cDepthWidth - 640) / 2,
						////		jend = cDepthWidth - ((cDepthWidth - 640) / 2);
						////	int idy = 0;
						////	for (int idx = 0; idx < cDepthWidth*cDepthHeight; ++idx) {
						////		const int i = idx / cDepthWidth;
						////		const int j = idx % cDepthWidth;
						////		if (i >= ibegin && i < iend && j >= jbegin && j < jend) {
						////			realDepthFrame[idy] = pDepthBuffer[idx];
						////			//realDepthFrame[idy] = (UINT16)2000;
						////			idy++;
						////		}
						////	}
						////	std::memcpy(finalDepthFrame, realDepthFrame, sizeof(UINT16) * 640 * 480);
						////}
						//std::memcpy(this->finalDepthFrame, this->realDepthFrame, sizeof(UINT16) * 640 * 480);

						//// copy color
						////memcpy(videoFrame, pColorBuffer, sizeof(RGBQUAD)*cColorWidth*cColorHeight);
						////memset(videoFrame, 0, sizeof(BYTE)*cColorWidth*cColorHeight);
						//std::memset(this->videoFrame, 0x33, sizeof(BYTE) * 640 * 480 * 3);
						//cv::Mat color = cv::Mat(cColorHeight, cColorWidth, CV_16UC1);
						//std::memcpy(color.data, pColorBuffer, nColorBufferSize*sizeof(UINT16));

						//cv::resize(color, color, cv::Size(640, 480));



						//{
						//	const int ibegin = (cColorHeight - 480) / 2, iend = cColorHeight - ((cColorHeight - 480) / 2), jbegin = (cColorWidth - 640) / 2, jend = cColorWidth - ((cColorWidth - 640) / 2);
						//	int idy = 0;
						//	for (int idx = 0; idx < cColorWidth*cColorHeight; ++idx) {
						//		const int i = idx / cColorWidth;
						//		const int j = idx % cColorWidth;
						//		if (i >= ibegin && i < iend && j >= jbegin && j < jend) {
						//			this->videoFrame[idy] = pColorBuffer[idx].rgbBlue;
						//			this->videoFrame[idy + 1] = pColorBuffer[idx].rgbGreen;
						//			this->videoFrame[idy + 2] = pColorBuffer[idx].rgbRed;

						//			//videoFrame[idy * 3] = (BYTE)255;
						//			//videoFrame[idy * 3 + 1] = (BYTE)0;
						//			//videoFrame[idy * 3 + 2] = (BYTE)0;


						//			idy += 3;
						//		}
						//	}
						//}


						//// set that we have color and depth frames
						newDepthFrame = true;
						newVideoFrame = true;
						++frameId;



						//cv::Mat kill = cv::Mat(480, 640, CV_8UC3);
						//std::memcpy(kill.data, this->videoFrame, sizeof(BYTE) * 640 * 480 * 3);
						//cv::imshow("kill", kill);
						//puts("alegria");
					}
					else {
						puts("FAILED IN coordinateMapper MApColorFrameToDepthSpace.");
					}
				}
				else {
					puts("Invalid data from kinect");
				}
				//cv::Mat dkill = cv::Mat(480, 640, CV_16UC1);
				//memcpy(dkill.data, realDepthFrame, sizeof(UINT16) * 640 * 480);
				//cv::imshow("dkill", dkill);
				//puts("update frame ok");
			}
			//else puts("aloka aqui");

			SafeRelease(pDepthFrameDescription);
			SafeRelease(pColorFrameDescription);
			SafeRelease(pBodyIndexFrameDescription);
		} //else puts("aloka aqui 2");

		SafeRelease(pDepthFrame);
		SafeRelease(pColorFrame);
		SafeRelease(pBodyIndexFrame);
		SafeRelease(pMultiSourceFrame);


#else
		XnStatus nRetVal = context.WaitAndUpdateAll();
		if (nRetVal != XN_STATUS_OK)
		{
			printf("UpdateData failed: %s\n", xnGetStatusString(nRetVal));
		}
		else {
			depth.GetMetaData(depthMD);
			image.GetMetaData(imageMD);

			for (int i = 0; i < this->depthBufferInfo.getWidth()*this->depthBufferInfo.getHeight(); i++) {
				if (depthMD.Data()[i] > 0 && depthMD.Data()[i] < 10000)
					this->finalDepthFrame[i] = depthMD.Data()[i];
			}

			//const XnDepthPixel* pInput = depthMD.Data();

			//XnInt16* pRegTable = (XnInt16*)(&this->regTable[0]);
			//XnInt16* pRGBRegDepthToShiftTable = (XnInt16*)(&this->depthToShiftTable[0]); 
			//XnDepthPixel nValue = 0;
			//XnDepthPixel nOutValue = 0;
			//XnUInt32 nNewX = 0;
			//XnUInt32 nNewY = 0;
			//XnUInt32 nArrPos = 0;
			//XnUInt32 nDepthXRes = XN_DEPTH_XRES;
			//XnUInt32 nDepthYRes = XN_DEPTH_YRES;
			//XnDepthPixel* pOutput = &this->realDepthFrame[0];
			//memset(pOutput, XN_DEVICE_SENSOR_NO_DEPTH_VALUE, nDepthXRes*nDepthYRes*sizeof(XnDepthPixel));
			//XnBool bMirror = 1;
			//XnUInt32 nConstOffset = 0;
			//for (XnUInt32 y = 0; y < nDepthYRes; ++y)
			//{
			//	pRegTable = (XnInt16*)&this->regTable[ bMirror? (y+1) * nDepthXRes * 2 - 2 : y * nDepthXRes * 2 ];
			//	for (XnUInt32 x = 0; x < nDepthXRes; ++x)
			//	{
			//		nValue = *pInput;

			//		if (nValue != XN_DEVICE_SENSOR_NO_DEPTH_VALUE)
			//		{
			//			//os << nValue << " " << y << " " << x << std::endl;
			//			nNewX = (XnUInt32)(*pRegTable + pRGBRegDepthToShiftTable[nValue]) / RGB_REG_X_VAL_SCALE;
			//			nNewY = *(pRegTable+1);

			//			if (nNewX < nDepthXRes && nNewY < nDepthYRes )
			//			{
			//				nArrPos = bMirror ? (nNewY+1)*nDepthXRes - nNewX - 2 : (nNewY*nDepthXRes) + nNewX;
			//				nArrPos -= nConstOffset;
			//	
			//				nOutValue = pOutput[nArrPos];

			//				if ((nOutValue == XN_DEVICE_SENSOR_NO_DEPTH_VALUE) || (nOutValue > nValue))
			//				{
			//					if ( nNewX > 0 && nNewY > 0 )
			//					{
			//						pOutput[nArrPos-nDepthXRes] = nValue;
			//						pOutput[nArrPos-nDepthXRes-1] = nValue;
			//						pOutput[nArrPos-1] = nValue;
			//					}
			//					else if( nNewY > 0 )
			//					{
			//						pOutput[nArrPos-nDepthXRes] = nValue;
			//					}
			//					else if( nNewX > 0 )
			//					{
			//						pOutput[nArrPos-1] = nValue;
			//					}
			//		
			//					pOutput[nArrPos] = nValue;
			//				}
			//			}
			//		}

			//		pInput++;
			//		bMirror ? pRegTable-=2 : pRegTable+=2;
			//	}
			//}

			newDepthFrame = true;
			newVideoFrame = true;
		}

#endif
	}

	void lockBuffers() {
#ifdef USE_MS_KINECT_V2_SDK
		m_lock.lock();
#endif
		if (newVideoFrame) {
#ifdef USE_MS_KINECT_SDK
			NuiImageBuffer* pTexture = videoFrame->pFrameTexture;
			pTexture->LockRect(0, &videoFrameLockedRect, NULL, 0);
			this->videoFrameInfo.setPitch(videoFrameLockedRect.Pitch);

#elif defined USE_MS_KINECT_V2_SDK

			/* TODO : KINECT V2 */
			//m_lock.lock();

#endif

			//std::cout << videoFrameLockedRect.Pitch << std::endl;
		}

		if (newDepthFrame) {
#ifdef USE_MS_KINECT_SDK
			NuiImageBuffer* pTexture = depthFrame->pFrameTexture;
			pTexture->LockRect(0, &depthFrameLockedRect, NULL, 0);
			this->depthBufferInfo.setPitch(depthFrameLockedRect.Pitch);
			const unsigned int depthWidth = depthBufferInfo.getWidth();
			const unsigned int depthHeight = depthBufferInfo.getHeight();


			short* pRegTable = (short*)&this->regTable[0];
			short* pRGBRegDepthToShiftTable = (short*)&this->depthToShiftTable[0];
			unsigned short nValue = 0;
			unsigned short nOutValue = 0;
			unsigned int nNewX = 0;
			unsigned int nNewY = 0;
			unsigned int nArrPos = 0;
			unsigned int nDepthXRes = XN_DEPTH_XRES;
			unsigned int nDepthYRes = XN_DEPTH_YRES;

			memset(this->realDepthFrame, XN_DEVICE_SENSOR_NO_DEPTH_VALUE, 640 * 480 * sizeof(unsigned short));
			unsigned short* pOutput = this->realDepthFrame;
			unsigned short* pInput = (unsigned short*)depthFrameLockedRect.pBits;
			for (unsigned int y = 0; y < nDepthYRes; ++y) {
				pRegTable = (short*)&this->regTable[(y + 1) * nDepthXRes * 2 - 2];
				for (unsigned int x = 0; x < nDepthXRes; ++x) {
					nValue = *pInput;
					if (nValue != XN_DEVICE_SENSOR_NO_DEPTH_VALUE) {
						//os << nValue << " " << y << " " << x << std::endl;
						nNewX = (unsigned int)(*pRegTable + pRGBRegDepthToShiftTable[nValue]) / RGB_REG_X_VAL_SCALE;
						nNewY = *(pRegTable + 1);
						if (nNewX < nDepthXRes && nNewY < nDepthYRes)
						{
							nArrPos = (nNewY + 1)*nDepthXRes - nNewX - 2;


							nOutValue = pOutput[nArrPos];

							if ((nOutValue == XN_DEVICE_SENSOR_NO_DEPTH_VALUE) || (nOutValue > nValue))
							{
								if (nNewX > 0 && nNewY > 0)
								{
									pOutput[nArrPos - nDepthXRes] = nValue;
									pOutput[nArrPos - nDepthXRes - 1] = nValue;
									pOutput[nArrPos - 1] = nValue;
								}
								else if (nNewY > 0)
								{
									pOutput[nArrPos - nDepthXRes] = nValue;
								}
								else if (nNewX > 0)
								{
									pOutput[nArrPos - 1] = nValue;
								}

								pOutput[nArrPos] = nValue;
							}
						}
					}
					pInput++;
					pRegTable -= 2;
				}
			}
#elif defined USE_MS_KINECT_V2_SDK

			/* TODO : KINECT V2 */

#endif
			//std::cout << depthFrameLockedRect.Pitch << std::endl;
		}

		//			if(newDepthFrame){
		//				NuiImageBuffer* pTexture = depthFrame->pFrameTexture;
		//				pTexture->LockRect(0, &depthFrameLockedRect, NULL, 0);
		//				this->depthBufferInfo.setPitch(depthFrameLockedRect.Pitch);
		//				const unsigned int depthWidth = depthBufferInfo.getWidth();
		//				const unsigned int depthHeight = depthBufferInfo.getHeight();
		//
		//				memset(this->realDepthFrame,0,640 * 480 * sizeof(unsigned short));
		//
		//				unsigned short* depthBuffer = (unsigned short*)depthFrameLockedRect.pBits;
		//				RT::Matrix33 R(9.9984628826577793e-01, 1.2635359098409581e-03,
		//-1.7487233004436643e-02, -1.4779096108364480e-03,
		//9.9992385683542895e-01, -1.2251380107679535e-02,
		//1.7470421412464927e-02, 1.2275341476520762e-02,
		//9.9977202419716948e-01 );
		//				//RT::Vector T(2.1354778990792557e-02, 2.5073334719943473e-03,
		//       			//1.2922411623995907e-02);
		//				RT::Vector T(1.9985242312092553e-02, -7.4423738761617583e-04,
		//-1.0916736334336222e-02);
		//				RT::AffineTransformation transf(R,T);
		//				//transf.get
		//				//R = R.getTranspose();
		//				for(unsigned int y = 0; y < depthHeight; ++y){
		//					for(unsigned int x = 0; x < depthWidth; ++x){
		//						LONG colorX;
		//						LONG colorY;
		//						unsigned int depthIndex = y * depthWidth + x;
		//						unsigned short depth = depthBuffer[depthIndex];
		//						depth &= 0xfff;
		//						unsigned int x_d = x;
		//						unsigned int y_d = y;
		//						if(depth != 0){
		//							RT::Point P3D;
		//							P3D.x = (x_d - cx_d) * rawDepthToMeters(depth) / fx_d;
		//							P3D.y = (y_d - cy_d) * rawDepthToMeters(depth) / fy_d;
		//							P3D.z = rawDepthToMeters(depth);
		//
		//							RT::Point P3DProj = P3D;
		//							transf.transformPoint(P3DProj);
		//
		//							RT::Point P2D_rgb;
		//							P2D_rgb.x = ((P3DProj.x * fx_rgb) / P3DProj.z) + cx_rgb;
		//							P2D_rgb.y = ((P3DProj.y * fy_rgb) / P3DProj.z) + cy_rgb;
		//							unsigned int colorY = RT::Math::round(P2D_rgb.y);
		//							unsigned int colorX = RT::Math::round(P2D_rgb.x);
		//							if(colorY < 480 && colorX < 640){
		//								unsigned int dX = (639 - colorX);
		//								unsigned int dY = colorY;
		//								unsigned int realDepthIndex = dY * 640 + dX;
		//								realDepthFrame[realDepthIndex] = depth;
		//							}
		//							//else{
		//								//std::cout << x << " " << y << " " << colorX << " " << colorY << std::endl;
		//							//}
		//						}
		//						
		//						//unsigned short trueDepth = depth & 0xfff;
		//						//depth = trueDepth << 3;
		//
		//						//HRESULT hr = NuiImageGetColorPixelCoordinatesFromDepthPixel(videoFrameResolution, NULL, x, y, depth, &colorX, &colorY);
		//						//if(hr != S_OK){
		//						//	std::cout << "CARAIO";
		//						//	return;
		//						//}
		//						//if(colorY < 480 && colorX < 640){
		//						//	unsigned int dX = colorX;//(639 - colorX);
		//						//	unsigned int dY = colorY;
		//						//	unsigned int realDepthIndex = dY * 640 + dX;
		//						//	realDepthFrame[realDepthIndex] = depth >> 3;
		//						//}else
		//						//	std::cout << x << " " << y << " " << colorX << " " << colorY << std::endl;
		//					}
		//				}
		//				//std::cout << depthFrameLockedRect.Pitch << std::endl;
		//			}
	}

	void unlockBuffers() {
#ifdef USE_MS_KINECT_V2_SDK
		m_lock.unlock();
#endif
		if (newVideoFrame) {
#ifdef USE_MS_KINECT_SDK
			NuiImageBuffer* pTexture = videoFrame->pFrameTexture;
			pTexture->UnlockRect(0);
			NuiImageStreamReleaseFrame(videoStreamHandle, videoFrame);

#elif defined USE_MS_KINECT_V2_SDK

			/* TODO : KINECT V2 */
			//m_lock.unlock();

#endif
			//newVideoFrame = false;
		}

		if (newDepthFrame) {
#ifdef USE_MS_KINECT_SDK
			NuiImageBuffer* pTexture = depthFrame->pFrameTexture;
			pTexture->UnlockRect(0);
			NuiImageStreamReleaseFrame(depthStreamHandle, depthFrame);

#elif defined USE_MS_KINECT_V2_SDK

			/* TODO : KINECT V2 */

#else
#endif
			//newDepthFrame = false;
		}
	}

	const BYTE* getVideoFrameBuffer() {
#ifdef USE_MS_KINECT_SDK
		BYTE * pBuffer = (BYTE*)videoFrameLockedRect.pBits;
		return pBuffer;

#elif defined USE_MS_KINECT_V2_SDK

		/* TODO : KINECT V2 */

		//static const int len = 1920*1080*3;
		//BYTE colorFrame[len];
		return (BYTE*)this->videoFrame;

#else
		const XnUInt8* pImage = (XnUInt8*)imageMD.RGB24Data();
		return pImage;
#endif

	}

	const unsigned short* getDepthBuffer() {
#ifdef USE_MS_KINECT_SDK
		//BYTE * pBuffer = (BYTE*) depthFrameLockedRect.pBits;
		//return pBuffer;
		return (BYTE*)realDepthFrame;

#elif defined USE_MS_KINECT_V2_SDK
		//static const int len = 1920*1080*2;
		//BYTE depthFrame[len];
		/* TODO : KINECT V2 */
		return (unsigned short*)this->finalDepthFrame;

#else
		//const XnDepthPixel* pDepth = depthMD.Data();
		//return pDepth;
		return this->finalDepthFrame;
		//return this->realDepthFrame;
#endif

	}

	//void getDepthCoordinateFromPixelBuffer(const unsigned int x, const unsigned int y, unsigned int& depthX, unsigned int&depthY) const{
	//	const unsigned int colorWidth = this->videoFrameInfo.getWidth();

	//	HRESULT hr = NuiImageGetColorPixelCoordinatesFromDepthPixel(NUI_IMAGE_RESOLUTION_640x480, NULL, x, y, depth, &plColorX, &plColorY);
	//	if(hr != S_OK) 
	//		return;

	//}

	void releaseBuffers() {
		//this->newDepthFrame = false;
		//this->newVideoFrame = false;
	}

	void enableDepthBuffer() {
		this->__depthBufferEnabled = true;
	}

	void disableDepthBuffer() {
		this->__depthBufferEnabled = false;
	}

	float rawDepthToMeters(unsigned short raw_depth) {

		/*const float k1 = 1.1863;
		const float k2 = 2842.5;
		const float k3 = 0.1236;
		const float depth = k3 * tanf(static_cast<float>(raw_depth)/k2 + k1);
		return depth;*/
		return 0.001f * raw_depth;
		/* if (raw_depth < 2047)
		{
		return 1.0 / (raw_depth * -0.0030711016 + 3.3309495161);
		}
		else return 0;*/

	}
};

class KinectController {

private:
	KinectCamera * camera;

public:
	explicit KinectController() :
		camera(0) {

	}

	void init(const CameraImageResolution videoFrameResolution) {

		this->camera = new KinectCamera();

#ifdef USE_MS_KINECT_SDK

		HRESULT hr = NuiInitialize(NUI_INITIALIZE_FLAG_USES_DEPTH | NUI_INITIALIZE_FLAG_USES_COLOR);

		if (FAILED(hr)) {
			std::cout << "NuiInitialize() error" << std::endl;
			return;
		}

#elif defined USE_MS_KINECT_V2_SDK

		/* TODO : KINECT V2 */

#endif

		camera->init(videoFrameResolution);

	}

	void release() {
#ifdef USE_MS_KINECT_SDK
		NuiShutdown();
#endif
		if (camera) {
			delete camera;
			camera = 0;
		}
	}

	void setElevationAngle(const int angle) {
#ifdef USE_MS_KINECT_SDK
		NuiCameraElevationSetAngle(angle);

#elif defined USE_MS_KINECT_V2_SDK

		/* TODO : KINECT V2 */

#endif
	}

	int getElevationAngle() const {
#ifdef USE_MS_KINECT_SDK
		long angle;
		NuiCameraElevationGetAngle(&angle);
		return static_cast<int>(angle);

#elif defined USE_MS_KINECT_V2_SDK

		/* TODO : KINECT V2 */

#endif
	}

	void addElevationAngle(const int angle) {
#ifdef USE_MS_KINECT_SDK
		int newAngle = angle + this->getElevationAngle();
		if (newAngle < -28)
			newAngle = -28;
		else if (newAngle > 28)
			newAngle = 28;
		NuiCameraElevationSetAngle(newAngle);

#elif defined USE_MS_KINECT_V2_SDK

		/* TODO : KINECT V2 */

#endif
	}

	KinectCamera* getCamera() {
		return this->camera;
	}

};

#endif

#endif
